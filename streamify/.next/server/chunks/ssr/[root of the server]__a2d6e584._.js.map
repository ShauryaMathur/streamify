{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/shauryamathur/Documents/Spring%202025/CSE460-DMQL/Project/trackzy/streamify/components/AlbumCard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/AlbumCard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/AlbumCard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/shauryamathur/Documents/Spring%202025/CSE460-DMQL/Project/trackzy/streamify/components/AlbumCard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/AlbumCard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/AlbumCard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/shauryamathur/Documents/Spring%202025/CSE460-DMQL/Project/trackzy/streamify/components/SearchBox.tsx"],"sourcesContent":["// components/SearchBox.tsx — SERVER component\n\nexport default function SearchBox({ defaultValue = '' }: { defaultValue?: string }) {\n  return (\n    <form method=\"get\" className=\"mb-6 flex justify-center\">\n      <input\n        name=\"q\"\n        defaultValue={defaultValue}\n        type=\"search\"\n        placeholder=\"Search album or artist…\"\n        className=\"w-full max-w-md rounded-full border py-2 px-4\"\n      />\n      <button\n        type=\"submit\"\n        className=\"ml-2 rounded-full bg-indigo-600 px-4 py-1 text-white\"\n      >\n        Search\n      </button>\n    </form>\n  )\n}"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;AAE/B,SAAS,UAAU,EAAE,eAAe,EAAE,EAA6B;IAChF,qBACE,8OAAC;QAAK,QAAO;QAAM,WAAU;;0BAC3B,8OAAC;gBACC,MAAK;gBACL,cAAc;gBACd,MAAK;gBACL,aAAY;gBACZ,WAAU;;;;;;0BAEZ,8OAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/shauryamathur/Documents/Spring%202025/CSE460-DMQL/Project/trackzy/streamify/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nexport const supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n)\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/shauryamathur/Documents/Spring%202025/CSE460-DMQL/Project/trackzy/streamify/lib/api.ts"],"sourcesContent":["import { supabase } from './supabase';\n\nexport interface AlbumTree {\n    album_id:   number\n    album:      string\n    artist:     string\n    tracks: {\n      track_id: number\n      name:     string\n      seconds:  number\n      price:    number\n    }[]\n  }\n  \n\nexport async function fetchAlbums(search: string) {\n    // empty string ⇒ no filter\n    const base = supabase.from('v_album_tree').select('*').order('artist')\n  \n    const { data, error } =\n      search.trim() === ''\n        ? await base\n        : await base.or(\n            `album.ilike.%${search}%,artist.ilike.%${search}%`\n          ) // ↙ case-insensitive\n  \n    if (error) throw error\n    return data\n  }\n\n  export async function checkout(items: number[]) {\n    // p_items is an array of {track_id,qty}\n    const payload = items.map((id) => ({ track_id: id, qty: 1 }))\n    // return the full response object\n    return supabase.rpc('f_checkout', {\n      p_customer: 1,\n      p_items: payload,\n    })\n  }\n\n  export type MonthlySale = { month: string; revenue: number }\nexport type TopTrack    = { track_id: number; name: string; units_sold: number }\n\nexport async function fetchSalesByMonth(): Promise<MonthlySale[]> {\n  const { data, error } = await supabase.rpc('f_sales_by_month')\n  if (error) throw error\n  return data!\n}\n\nexport async function fetchTopTracks(): Promise<TopTrack[]> {\n  const { data, error } = await supabase.rpc('f_top_tracks_sales')\n  if (error) throw error\n  return data!\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAeO,eAAe,YAAY,MAAc;IAC5C,2BAA2B;IAC3B,MAAM,OAAO,+GAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,gBAAgB,MAAM,CAAC,KAAK,KAAK,CAAC;IAE7D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GACnB,OAAO,IAAI,OAAO,KACd,MAAM,OACN,MAAM,KAAK,EAAE,CACX,CAAC,aAAa,EAAE,OAAO,gBAAgB,EAAE,OAAO,CAAC,CAAC,EAClD,qBAAqB;;IAE7B,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,eAAe,SAAS,KAAe;IAC5C,wCAAwC;IACxC,MAAM,UAAU,MAAM,GAAG,CAAC,CAAC,KAAO,CAAC;YAAE,UAAU;YAAI,KAAK;QAAE,CAAC;IAC3D,kCAAkC;IAClC,OAAO,+GAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,cAAc;QAChC,YAAY;QACZ,SAAS;IACX;AACF;AAKK,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAAC,GAAG,CAAC;IAC3C,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAAC,GAAG,CAAC;IAC3C,IAAI,OAAO,MAAM;IACjB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/shauryamathur/Documents/Spring%202025/CSE460-DMQL/Project/trackzy/streamify/app/page.tsx"],"sourcesContent":["// app/page.tsx\n\nimport AlbumCard from '@/components/AlbumCard'\nimport SearchBox from '@/components/SearchBox'\nimport { fetchAlbums } from '@/lib/api'\nimport { notFound } from 'next/navigation'\n\nexport default async function Home({\n  searchParams,\n}: {\n  // In Next.js 15, searchParams is passed in as a Promise\n  searchParams: Promise<Record<string, string>>\n}) {\n  // Await the Promise before accessing its properties\n  const params = await searchParams\n  const q = params.q?.trim() ?? ''\n\n  // Fetch filtered albums\n  const albums = await fetchAlbums(q)\n  if (!albums) notFound()\n\n  return (\n    <main className=\"mx-auto max-w-6xl p-6\">\n      {/* Server-side search form */}\n      <SearchBox defaultValue={q} />\n\n      {/* Results grid */}\n      {albums.length === 0 ? (\n        <p className=\"text-center text-gray-500\">\n          No matches for “{q}”\n        </p>\n      ) : (\n        <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {albums.map((album) => (\n            <AlbumCard key={album.album_id} album={album} />\n          ))}\n        </div>\n      )}\n    </main>\n  )\n}"],"names":[],"mappings":"AAAA,eAAe;;;;;AAEf;AACA;AACA;AACA;AAAA;;;;;;AAEe,eAAe,KAAK,EACjC,YAAY,EAIb;IACC,oDAAoD;IACpD,MAAM,SAAS,MAAM;IACrB,MAAM,IAAI,OAAO,CAAC,EAAE,UAAU;IAE9B,wBAAwB;IACxB,MAAM,SAAS,MAAM,CAAA,GAAA,0GAAA,CAAA,cAAW,AAAD,EAAE;IACjC,IAAI,CAAC,QAAQ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAEpB,qBACE,8OAAC;QAAK,WAAU;;0BAEd,8OAAC,wHAAA,CAAA,UAAS;gBAAC,cAAc;;;;;;YAGxB,OAAO,MAAM,KAAK,kBACjB,8OAAC;gBAAE,WAAU;;oBAA4B;oBACtB;oBAAE;;;;;;qCAGrB,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,wHAAA,CAAA,UAAS;wBAAsB,OAAO;uBAAvB,MAAM,QAAQ;;;;;;;;;;;;;;;;AAM1C","debugId":null}}]
}